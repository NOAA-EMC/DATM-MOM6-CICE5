
########################################################################

# HERA SUPPORT

platform hera.intel {
    use platform.defaults
    MACHINE_ID='hera.intel' # Name of this platform.
    PARTITION='hera'
    MPI='srun_shell'

    CPU_ACCOUNT='nems'
    BUILD_QUEUE='&BUILDQ;' # Queue to use for compilation jobs
    SHORT_TEST_QUEUE='&SHORTQ;' # Queue to use for short test jobs
    LONG_TEST_QUEUE='&LONGQ;' # Queue to use for long test jobs

    cores_per_node=40 # Number of cores per node on compute nodes
    cpus_per_core=2

    # The *nems locations are in NEMS checkout areas.
    HOMEnems=PWD_UP5

    # The *rt locations are auto-generated areas.
    HOMErt=OUTPUT_PATH

    # INPUTS is the input directory, which should contain fix and parm
    # files, plus any restarts or other inputs.

    BASELINE="/scratch1/NCEPDEV/nems/emc.nemspara/RT/DATM-MOM6-CICE5/develop-20200518"
    BASELINE_TEMPLATE="/scratch1/NCEPDEV/nems/emc.nemspara/RT/DATM-MOM6-CICE5/develop-20200518"
    INPUTS="@[BASELINE]"

    default_cpl={
        TASKS=280
        TPN=40
        atm_petlist_bounds="0 15"
        med_petlist_bounds="16 111"
        ocn_petlist_bounds="112 231"
        ice_petlist_bounds="232 279"
    }

    # PLATFORM DETECTION -----------------------------------------------
    embed bash detect [[[
        # This function is used at PARSE TIME to detect whether we are
        # on NOAA Hera.  It must be very fast and low resource usage
        # since the parser runs it.
        if [[ -d /scratch1 && -d /scratch2 ]] ; then
            exit 0
        fi
        exit 1
    ]]]

    # ROCOTO SUPPORT ---------------------------------------------------
    rocoto={
        install_dir="@[HOMErt]"
        log_dir="@[TMPrt]/log"
        scheduler="slurm"
        entities=[[[
  <!ENTITY SHORTQ "debug">
  <!ENTITY LONGQ "debug">
  <!ENTITY BUILDQ "debug"> <!-- NOTE: If you change this, you must change the partition too -->
]]]
        build_resources=[[[
      <!-- Build job resources minus wallclock -->
      <queue>@[BUILD_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <cores>12</cores> <!-- 2 cores ensures exclusive access on Hera -->
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        short_test_resources=[[[
      <!-- Short test job -->
      <queue>@[SHORT_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        long_test_resources=[[[
      <!-- Long test job -->
      <queue>@[LONG_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
    }
}
